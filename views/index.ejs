<%- include("partials/header"); -%>


  <div class="box" id="heading">

    <!-- <div class="carousel-container">

      <div id="myCarousel" class="carousel slide" data-ride="carousel"> -->
    <!-- Indicators -->
    <!-- <ol class="carousel-indicators">
          <li data-target="#myCarousel" data-slide-to="0"></li>
          <li data-target="#myCarousel" data-slide-to="1"></li>
          <li data-target="#myCarousel" data-slide-to="2"></li>
        </ol> -->

    <!-- Wrapper for slides -->
    <!-- <div class="carousel-inner">
          <div class="item active">
            <img src="/images/sorting images/fruits-sorting.jpg" alt="fruits-sorting 1" style="width:100%;">
          </div>

          <div class="item">
            <img src="/images/sorting images/fruits-sorting2.jpg" alt="fruits-sorting 2" style="width:100%;">
          </div>

          <div class="item">
            <img src="/images/sorting images/fruits-sorting3.jpg" alt="fruits-sorting 3" style="width:100%;">
          </div>
        </div> -->


    <!-- Left and right controls -->
    <!-- <a class="left carousel-control" href="#myCarousel" data-slide="prev">
          <span class="glyphicon glyphicon-chevron-left"></span>
          <span class="sr-only">Previous</span>
        </a>
        <a class="right carousel-control" href="#myCarousel" data-slide="next">
          <span class="glyphicon glyphicon-chevron-right"></span>
          <span class="sr-only">Next</span>
        </a>
      </div>
    </div> -->
  </div>



  <div class="flex-container-ind">
    <div class="flex-item-menu">

      <div class="menu-item" id="menu-intro" onclick="showDiv('intro', 'menu-intro')" style="cursor: pointer">
        introduction
        <!-- <a href="https://localhost:9000/same_values">same values</a> -->
      </div>


      <div class="menu-item" id="menu-sorting" style="cursor: pointer">
        <a href="https://localhost:9000/sorting_algorithms">sorting algorithms</a>
      </div>

      <div class="menu-item" id="menu-same" style="cursor: pointer">
        <a href="https://localhost:9000/same_values">same values</a>
      </div>


      <!-- <div class="menu-item">
        <a href="https://localhost:9000/unique_values">unique values</a>
      </div>

      <div class="menu-item">
        <a href="https://localhost:9000/sum_zero">sum zero</a>
      </div>

      <div class="menu-item">
        <a href="https://localhost:9000/anagram">anagram</a>
      </div> -->

    </div>

    <div class="flex-item-lem">
      <div class="index" id="intro" display="none">
        <!-- <h3 class="intro">Introduction</h3> -->

        <div class="text-box">
          <div style="cursor:pointer"><span style='font-size:30px;'
              onclick="showDiv('sorting', 'menu-intro')">&#8640;</span></div>
          <h6 class="expl-title">
            <i>TEST IT YOURSELF</i>
          </h6>
          <p class="expl">
            Time complexity and energy efficiency of algorithms are often closely connected. To develop
            green software the most efficient algorithms should be used.
            <br>
            Navigate directly to the next pages to test time complexity of several algorithms.
            <br>
            Below you can find some general information about algorithms and green computing, and how to 
            use the applications on this site.
          </p>
          <div class="paper-shadow">
          </div>
          <img class="img-ind" src="\images\PHOTOLISTE_20090617161949_irak_une_page_du_traite__600_.jpg">
          <h6 class="expl-title">
            <i>HISTORY</i>
          </h6>
          <p class="expl">
            The word 'algorithm' is derived from the name of the 9th-century Persian mathematician Muhammad ibn Musa
            al-Khwarizmi.
            He is also known as the author of <i>lim al-jabr wa l-muqƒÅbala</i>. 'Al-jabrin' refers to the operation of
            moving
            a term from one side of an equation to the other, and it entered the Latin language as the word 'algebra'.
          </p>
          <br>

          <p class="expl">
            Since antiquity, step-by-step procedures for solving mathematical problems have been attested. In our
            digitized
            world algorithms are ubiquitous.
            Under the surface of contemporary society, algorithms are determining our lives. They might be helpful, but
            also
            intrusive. In any case,
            they are energy consuming. Accounting for about 2 percent of total greenhouse gas emissions, data centres
            have the same carbon footprint as the aviation industry. By 2040, storing digital data is set to create 14
            percent of the world's emissions.
            Because data isn't physical,
            we are often unaware of its stark environmental impact.

          </p>
          <div class="paper-shadow">
          </div>
          <h6 class="expl-title">
            <i>DATA DECARBONISATION</i>
          </h6>
          <p class="expl">
            Many of the sustainability initiatives of data centers are based on using renewable energy for cooling
            systems
            to
            reduce
            power consumption. A lot of researchers are engaged in optimizing the energy efficiency of the hardware
            components.
            However, the software itself also has a significant effect on the amount of electricity being consumed.
            Algorithmic energy
            efficiency is the key to green software development.
          </p>
          <br>
          <p class="expl">
            Software researchers conduct studies measuring the energy consumption of different methods and algorithms
            varying
            experimental environment.
            The ever growing number of primary studies are having at times varying conclusions. In some cases
            experimental
            results
            falsify the generalization that time and space complexity can be used as a measure for energy efficiency.
            However, many other empirical studies and
            meta-analytical comparisons suggest energy consumption of an algorithm does depend mainly
            on time and space complexity.
          </p>

          <div style="cursor:pointer"><span style='font-size:30px;'
              onclick="showDiv('sorting', 'menu-intro')">&#8640;</span></div>
        </div>
      </div>

      <div class="index" id="sorting" display="none">
        <div class="text-box">
          <div style="cursor:pointer"><span style='font-size:30px;'
              onclick="showDiv('intro', 'menu-intro')">&#8636;</span>
          </div>
          <h6 class="expl-title">
            <i>SORTING ALGORITHMS & TIME EFFICIENCY</i>
          </h6>
          <p class="expl">
            Sorting algorithms are fundamental to almost every information system software. They are not only
            used directly in many applications, but also very
            often implicitly by other algorithms. Selecting an energy-efficient sorting algorithm is crucial in
            helping to reduce loss in terms of resources. Energy consumption and efficiency are part of the cornerstone
            of
            green software engineering.
            <br>
            <br>
            <img class="img-ind-2" src="\images\big-o-chart.jpg">
            Big O notation is used to describe the complexity of an algorithm. It is a measure for the number
            of operations an algorithm wil make in a worst case. Some emperical studies conclude that the energy
            consumption
            of sorting algorithms depends mainly on time and space complexity of that algorithm, which means
            algorithms that needs O(n2) comparisons require more energy than algorithms
            with O(n log n) comparisons.
          <div class="paper-shadow">
          </div>
          <h6 class="expl-title">
            <i>LITTLE WARNING ON TESTING</i>
          </h6>
          <p class="expl">
            On this site you can test some of these algorithms yourself and get an idea of their efficiency. The program
            will measure
            the running time of the algorithm. Note that there are many factors that influence the time an algorithm
            takes
            to run. For example, it will
            be influenced by the other processes your computer is handling. Try an algorithm several times to estimate
            the
            deviations, caused by these influences.
            The bigger the data, the clearer the differences between the algorithms become. However, trying slow
            algorithms with arrays of 100,000 elements or more can
            cause your browser to freeze for some time.
            <br>
            <br>
            Reading and understandig code is the best way to evaluate the efficiency of an algorithm. You can check the
            code of the algorithms by clicking
            on the black thumbnails. The example of the two 'same values algorithms' makes clear that one algorithm can
            be
            more efficient than an other
            in only one case, but that this case will be decisive.
          </p>
          <div class="paper-shadow">
          </div>
          <p class="expl">
            <i>
              This site is under construction and will be forever. More examples and pages might be added in the futur.
              Every <a href="mailto:reci.reciproque@gmail.com">comment or suggestion</a> is much appreciated.
              <br>
              <br>
              Visit this great <a href="https://visualgo.net/" target="blank">site</a> to learn more about different
              algorithms and how they work.
            </i>
          </p>
          <div style="cursor:pointer"><span style='font-size:30px;'
              onclick="showDiv('intro', 'menu-intro')">&#8636;</span></div>
        </div>
      </div>
      <!-- <div class="index" id="same" style="visibility: hidden"> this is the section on other algorithms</div>
      <div class="index" id="" style="visibility: hidden"></div> -->
    </div>

  </div>



  <%- include("partials/footer"); -%>